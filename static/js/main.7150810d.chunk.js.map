{"version":3,"sources":["features/Map/MapLeftPanel/ViewPlaceInformation.module.css","features/Map/MapLeftPanel/MapLeftPanel.module.css","features/Map/MapLeftPanel/MapLeftPanelFilters.module.css","features/Map/MapComponent.module.css","features/Map/MapViewPlaces.module.css","features/Map/Places/placeProvider.js","features/Map/Places/placesSlice.js","enums/gPlaces/typesEnum.js","utills/useQuery.js","utills/createNavigation.js","features/Map/MapLeftPanel/MapLeftPanelFilters.js","enums/gPlaces/businessStatusEnum.js","features/Map/MapLeftPanel/ViewPlaceInformation.js","features/Map/MapLeftPanel/MapLeftPanel.js","features/Map/MapViewPlaces.js","features/Map/MapView.js","features/Map/MapComponent.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","provider","placeProvider","injectProvider","nProvider","nearbySearch","arg","cb","createAsyncThunk","params","getState","Promise","resolve","reject","type","places","placeType","location","radius","fields","resp","map","res","geometry","lat","lng","place_id","name","photos","photo","url","getUrl","business_status","vicinity","e","placesSlice","createSlice","initialState","nearbyPlaces","nearbyPlacesStatus","currentPlace","reducers","setCurrentPlace","state","action","payload","setPlaceType","setLocation","setRadius","extraReducers","builder","addCase","pending","fulfilled","actions","selectNearbyPlaces","selectCurrentPlace","selectPlaceType","typesEnum","accounting","airport","amusement_park","aquarium","art_gallery","atm","bakery","bank","bar","beauty_salon","bicycle_store","book_store","bowling_alley","bus_station","cafe","campground","car_dealer","car_rental","car_repair","car_wash","casino","cemetery","church","city_hall","clothing_store","convenience_store","courthouse","dentist","department_store","doctor","drugstore","electrician","electronics_store","embassy","fire_station","florist","funeral_home","furniture_store","gas_station","gym","hair_care","hardware_store","hindu_temple","home_goods_store","hospital","insurance_agency","jewelry_store","laundry","useQuery","search","useLocation","React","useMemo","URLSearchParams","createNavigation","newValues","urlSearchParams","window","qs","stringify","Object","fromEntries","entries","MapLeftPanelFilters","query","navigate","useNavigate","typesArray","keys","key","value","label","dispatch","useDispatch","useSelector","has","get","className","styles","container","onChange","newVal","target","businessStatusEnum","CLOSED_PERMANENTLY","CLOSED_TEMPORARILY","OPERATIONAL","ViewPlaceInformation","length","row","index","image","alt","src","MapLeftPanel","header","MapViewPlaces","useGoogleMap","place","position","onClick","viewport","fitBounds","onClickMarker","containerStyle","width","height","MapView","useJsApiLoader","googleMapsApiKey","env","GOOGLE_MAPS_API_KEY","libraries","isLoaded","loadError","useState","mapRef","setMapRef","center","timeout","calcRadius","getCenter","bounds","getBounds","ne","getNorthEast","google","maps","spherical","computeDistanceBetween","onLoad","ref","PlacesService","mapContainerStyle","zoom","onCenterChanged","toJSON","clearTimeout","setTimeout","toPrecision","onTilesLoaded","memo","MapComponent","isNaN","parseFloat","App","store","configureStore","reducer","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7150810d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"view-place-information-container\":\"ViewPlaceInformation_view-place-information-container__2Dkoi\",\"field-container\":\"ViewPlaceInformation_field-container__1hZ1L\",\"row\":\"ViewPlaceInformation_row__2VGgm\",\"image\":\"ViewPlaceInformation_image__3QOR5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map-left-panel-container\":\"MapLeftPanel_map-left-panel-container__3G7Sn\",\"header\":\"MapLeftPanel_header__p5nYy\",\"content-container\":\"MapLeftPanel_content-container__1Ijv3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MapLeftPanelFilters_container__3Dwki\",\"search-panel\":\"MapLeftPanelFilters_search-panel__2yFIG\",\"field-container\":\"MapLeftPanelFilters_field-container__2l-LX\",\"label\":\"MapLeftPanelFilters_label__1FoaO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MapComponent_container__sVYAx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map-view-place-container\":\"MapViewPlaces_map-view-place-container__24YEd\"};","var provider = null;\r\n\r\nexport const placeProvider = {\r\n  injectProvider(nProvider) {\r\n    provider = nProvider;\r\n  },\r\n  get provider() {\r\n    return provider;\r\n  },\r\n  nearbySearch(arg, cb) {\r\n    return provider && provider.nearbySearch(arg, cb);\r\n  },\r\n}\r\n","import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport {placeProvider} from './placeProvider';\r\n\r\nconst initialState = {\r\n  nearbyPlaces: [],\r\n  nearbyPlacesStatus: 'idle',\r\n  currentPlace: null,\r\n  placeType: 'accounting',\r\n  location: null,\r\n  radius: '150000',\r\n};\r\n\r\nexport const nearbySearch = createAsyncThunk(\r\n  'places/nearbySearch',\r\n  (params, { getState }) => new Promise((resolve, reject) => {\r\n    try {\r\n      const type = getState().places.placeType;\r\n      const location = getState().places.location;\r\n      const radius = getState().places.radius;\r\n      placeProvider.nearbySearch({\r\n        location,\r\n        radius,\r\n        type: [type],\r\n        fields: ['address_component', 'adr_address', 'type', 'url', 'website']\r\n      }, (resp) => resolve(resp.map(res => ({\r\n        geometry: {\r\n          location: {\r\n            lat: res.geometry.location.lat(),\r\n            lng: res.geometry.location.lng(),\r\n          },\r\n        },\r\n        place_id: res.place_id,\r\n        name: res.name,\r\n        photos: res.photos && res.photos.map(photo => ({ url: photo.getUrl() })) || [],\r\n        business_status: res.business_status,\r\n        vicinity: res.vicinity,\r\n      }))));\r\n    } catch (e) {\r\n      reject(e);\r\n    }\r\n  })\r\n);\r\n\r\nexport const placesSlice = createSlice({\r\n  name: 'places',\r\n  initialState,\r\n  reducers: {\r\n    setCurrentPlace(state, action) {\r\n      state.currentPlace = action.payload;\r\n    },\r\n    setPlaceType(state, action) {\r\n      state.placeType = action.payload;\r\n    },\r\n    setLocation(state, action) {\r\n      state.location = {\r\n        lat: action.payload.lat,\r\n        lng: action.payload.lng,\r\n      };\r\n    },\r\n    setRadius(state, action) {\r\n      state.radius = action.payload;\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(nearbySearch.pending, (state) => {\r\n        state.nearbyPlacesStatus = 'loading';\r\n      })\r\n      .addCase(nearbySearch.fulfilled, (state, action) => {\r\n        state.nearbyPlacesStatus = 'success';\r\n        state.nearbyPlaces = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const {\r\n  setCurrentPlace,\r\n  setPlaceType,\r\n  setLocation,\r\n  setRadius,\r\n} = placesSlice.actions;\r\n\r\nexport const selectNearbyPlaces = (state) => state.places.nearbyPlaces;\r\nexport const selectCurrentPlace = (state) => state.places.currentPlace;\r\nexport const selectPlaceType = (state) => state.places.placeType;\r\n\r\nexport default placesSlice.reducer;\r\n","const typesEnum = {\r\n  accounting: 'Accounting',\r\n  airport: 'Airport',\r\n  amusement_park: 'Amusement Park',\r\n  aquarium: 'Aquarium',\r\n  art_gallery: 'Art Gallery',\r\n  atm: 'ATM',\r\n  bakery: 'Bakery',\r\n  bank: 'Bank',\r\n  bar: 'Bar',\r\n  beauty_salon: 'Beauty Salon',\r\n  bicycle_store: 'Bicycle Store',\r\n  book_store: 'Book Store',\r\n  bowling_alley: 'Bowling Alley',\r\n  bus_station: 'Bus Station',\r\n  cafe: 'Cafe',\r\n  campground: 'Campground',\r\n  car_dealer: 'Car Dealer',\r\n  car_rental: 'Car Rental',\r\n  car_repair: 'Car Repair',\r\n  car_wash: 'Car Wash',\r\n  casino: 'Casino',\r\n  cemetery: 'Cemetery',\r\n  church: 'Church',\r\n  city_hall: 'City Hall',\r\n  clothing_store: 'Clothing Store',\r\n  convenience_store: 'Convenience Store',\r\n  courthouse: 'Courthouse',\r\n  dentist: 'Dentist',\r\n  department_store: 'Department Store',\r\n  doctor: 'Doctor',\r\n  drugstore: 'Drugstore',\r\n  electrician: 'Electrician',\r\n  electronics_store: 'Electronics store',\r\n  embassy: 'Embassy',\r\n  fire_station: 'Fire Station',\r\n  florist: 'Florist',\r\n  funeral_home: 'Funeral Home',\r\n  furniture_store: 'Furniture Store',\r\n  gas_station: 'Gas Station',\r\n  gym: 'gym',\r\n  hair_care: 'Hair Care',\r\n  hardware_store: 'Hardware Store',\r\n  hindu_temple: 'Hindu temple',\r\n  home_goods_store: 'Home goods store',\r\n  hospital: 'hospital',\r\n  insurance_agency: 'insurance agency',\r\n  jewelry_store: 'Jewelry store',\r\n  laundry: 'Laundry',\r\n}\r\nexport default typesEnum;\r\n","import {useLocation} from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nexport function useQuery() {\r\n  const { search } = useLocation();\r\n\r\n  return React.useMemo(() => new URLSearchParams(search), [search]);\r\n}\r\n","import qs from 'querystring';\r\n\r\nexport function createNavigation(newValues) {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  return qs.stringify({\r\n    ...Object.fromEntries(urlSearchParams.entries()),\r\n    ...newValues,\r\n  });\r\n}\r\n","import React from 'react';\r\nimport styles from './MapLeftPanelFilters.module.css';\r\nimport typesEnum from '../../../enums/gPlaces/typesEnum';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {nearbySearch, selectPlaceType, setPlaceType} from '../Places/placesSlice';\r\nimport {useQuery} from '../../../utills/useQuery';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport qs from 'querystring';\r\nimport {createNavigation} from '../../../utills/createNavigation';\r\n\r\nexport function MapLeftPanelFilters() {\r\n  const query = useQuery();\r\n  let navigate = useNavigate();\r\n  const typesArray = Object.keys(typesEnum).map(key => ({ value: key, label: typesEnum[key] }));\r\n  const dispatch = useDispatch();\r\n  const updateSelectedValue = (newVal) => {\r\n    dispatch(setPlaceType(newVal.target.value));\r\n    dispatch(nearbySearch());\r\n    navigate({\r\n      search: createNavigation({\r\n        type: newVal.target.value,\r\n      }),\r\n    });\r\n  };\r\n  const placeType = useSelector(selectPlaceType);\r\n  if (query.has('type')) {\r\n    dispatch(setPlaceType(query.get('type')));\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles['field-container']}>\r\n        <div className={styles.label}>\r\n          Select type of places\r\n        </div>\r\n        <select\r\n          onChange={updateSelectedValue}\r\n          value={placeType}>\r\n          {typesArray.map(({ value, label }) =>\r\n            <option\r\n              key={value}\r\n              value={value}>{label}</option>)}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const businessStatusEnum = {\r\n  CLOSED_PERMANENTLY: 'The business is closed permanently.',\r\n  CLOSED_TEMPORARILY: '\\tThe business is closed temporarily.',\r\n  OPERATIONAL: 'The business is operating normally.',\r\n};\r\nexport default businessStatusEnum;\r\n","import React from 'react';\r\nimport styles from './ViewPlaceInformation.module.css';\r\nimport {useSelector} from 'react-redux';\r\nimport {selectCurrentPlace} from '../Places/placesSlice';\r\nimport businessStatusEnum from '../../../enums/gPlaces/businessStatusEnum';\r\nimport {useQuery} from '../../../utills/useQuery';\r\n\r\nexport function ViewPlaceInformation() {\r\n  const query = useQuery();\r\n  const currentPlace = useSelector(selectCurrentPlace);\r\n\r\n  return (\r\n    <div className={styles['view-place-information-container']}>\r\n      {\r\n        currentPlace && <div className={styles['field-container']}>\r\n          <div className={styles['field-value']}>\r\n            {currentPlace ? currentPlace.name: ''}\r\n          </div>\r\n        </div>\r\n      }\r\n      { currentPlace && currentPlace.photos && currentPlace.photos.length ?\r\n        <div className={styles['field-container']}>\r\n          <div className={styles['field-label']}>\r\n            Photo's\r\n          </div>\r\n          <div className={styles.row}>\r\n            {currentPlace.photos.map((photo, index) =>\r\n              <img\r\n                className={styles.image}\r\n                key={index}\r\n                alt=\"place\"\r\n                src={photo.url}/>)}\r\n          </div>\r\n        </div>\r\n        : ''}\r\n      {\r\n        currentPlace && <div className={styles['field-container']}>\r\n          <div className={styles['field-label']}>\r\n            Status\r\n          </div>\r\n          <div className={styles['field-value']}>\r\n            {currentPlace ? businessStatusEnum[currentPlace.business_status] : ''}\r\n          </div>\r\n        </div>\r\n      }\r\n      {\r\n        currentPlace && <div className={styles['field-container']}>\r\n          <div className={styles['field-label']}>\r\n            Vicinity\r\n          </div>\r\n          <div className={styles['field-value']}>\r\n            {currentPlace ? currentPlace.vicinity: ''}\r\n          </div>\r\n        </div>\r\n      }\r\n      {\r\n        !currentPlace && <div>Click on pin on the map to see details</div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styles from './MapLeftPanel.module.css';\r\nimport {MapLeftPanelFilters} from './MapLeftPanelFilters';\r\nimport {ViewPlaceInformation} from './ViewPlaceInformation';\r\n\r\nexport function MapLeftPanel() {\r\n  return (\r\n    <div className={styles['map-left-panel-container']}>\r\n      <div className={styles.header}>\r\n        Test task for Kiko Homes\r\n      </div>\r\n      <MapLeftPanelFilters />\r\n      <div className={styles['content-container']}>\r\n        <ViewPlaceInformation />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styles from './MapViewPlaces.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {selectNearbyPlaces, setCurrentPlace} from './Places/placesSlice';\r\nimport {Marker, useGoogleMap} from '@react-google-maps/api';\r\nimport {createNavigation} from '../../utills/createNavigation';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nexport function MapViewPlaces() {\r\n  const map = useGoogleMap();\r\n  const navigate = useNavigate();\r\n  const places = useSelector(selectNearbyPlaces);\r\n  const dispatch = useDispatch();\r\n\r\n  const onClickMarker = (place) => {\r\n    dispatch(setCurrentPlace(place));\r\n    if (place.geometry && place.geometry.viewport) {\r\n      map.fitBounds(place.geometry.viewport);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles['map-view-place-container']}>\r\n      {places.map((place) => <Marker\r\n        key={place.place_id}\r\n        position={place.geometry.location}\r\n        onClick={() => onClickMarker(place)}\r\n      />)}\r\n    </div>\r\n  );\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport {\r\n  GoogleMap,\r\n  useJsApiLoader,\r\n} from '@react-google-maps/api';\r\nimport qs from 'querystring';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport env from \"react-dotenv\";\r\nimport {useDispatch} from 'react-redux';\r\nimport {nearbySearch, setLocation, setRadius} from './Places/placesSlice';\r\nimport {MapLeftPanel} from './MapLeftPanel/MapLeftPanel';\r\nimport {MapViewPlaces} from './MapViewPlaces';\r\nimport {useQuery} from '../../utills/useQuery';\r\nimport {createNavigation} from '../../utills/createNavigation';\r\nimport {placeProvider} from './Places/placeProvider';\r\n\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '100%'\r\n};\r\n\r\nexport function MapView({ lat, lng }) {\r\n  const query = useQuery();\r\n  const { isLoaded, loadError } = useJsApiLoader({\r\n    googleMapsApiKey: env.GOOGLE_MAPS_API_KEY,\r\n    libraries: ['places', 'geometry'],\r\n  });\r\n  const dispatch = useDispatch();\r\n  const [mapRef, setMapRef] = useState(null);\r\n  let navigate = useNavigate();\r\n  let center = { lat, lng };\r\n  let timeout = null;\r\n  let initialDataRequested = false;\r\n\r\n  const calcRadius = () => {\r\n    const center = mapRef.getCenter();\r\n    const bounds = mapRef.getBounds();\r\n    if (bounds && center) {\r\n      const ne = bounds.getNorthEast();\r\n      return window.google.maps.geometry.spherical.computeDistanceBetween(center, ne);\r\n    }\r\n    return 1500;\r\n  };\r\n\r\n  const fireLoadingObjects = () => {\r\n    dispatch(setLocation({\r\n      lat: mapRef.getCenter().lat(),\r\n      lng: mapRef.getCenter().lng(),\r\n    }));\r\n    dispatch(setRadius(calcRadius()));\r\n    dispatch(nearbySearch());\r\n  };\r\n\r\n  const setLocationToUrl = () => {\r\n    if (lat !== center.lat || lng !== center.lng) {\r\n      if (timeout) {\r\n        clearTimeout(timeout);\r\n      }\r\n      timeout = setTimeout(() => {\r\n        navigate({\r\n          search: createNavigation({\r\n            lat: center.lat.toPrecision(8),\r\n            lng: center.lng.toPrecision(8),\r\n          }),\r\n        });\r\n        dispatch(setLocation(center));\r\n        dispatch(setRadius(calcRadius()));\r\n        dispatch(nearbySearch());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  const updateLocation = () => {\r\n    if (mapRef) {\r\n      center = mapRef.getCenter().toJSON();\r\n      setLocationToUrl();\r\n    }\r\n  };\r\n\r\n  const updateMapReference = ref => {\r\n    setMapRef(ref);\r\n    placeProvider.injectProvider(new window.google.maps.places.PlacesService(ref));\r\n  }\r\n\r\n  return (isLoaded ?\r\n      <GoogleMap\r\n        onLoad={map => updateMapReference(map)}\r\n        mapContainerStyle={containerStyle}\r\n        center={center}\r\n        zoom={15}\r\n        onCenterChanged={updateLocation}\r\n        onTilesLoaded={fireLoadingObjects}\r\n      >\r\n        <MapLeftPanel />\r\n        <MapViewPlaces />\r\n      </GoogleMap> :\r\n      loadError ? <div>{loadError}</div> : ''\r\n  )\r\n}\r\n\r\nexport default React.memo(MapView);\r\n","import React from 'react';\r\nimport styles from './MapComponent.module.css';\r\nimport MapView from './MapView';\r\nimport {useLocation} from 'react-router-dom';\r\nimport {useQuery} from '../../utills/useQuery';\r\n\r\n\r\n\r\nexport function MapComponent() {\r\n  let query = useQuery();\r\n  let lat = query.get(\"lat\") && !isNaN(parseFloat(query.get(\"lat\"))) ? parseFloat(query.get(\"lat\")): 51.488028;\r\n  let lng = query.get(\"lng\") && !isNaN(parseFloat(query.get(\"lng\"))) ? parseFloat(query.get(\"lng\")): 0;\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <MapView\r\n        lat={lat}\r\n        lng={lng}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { MapComponent } from './features/Map/MapComponent';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"main-container\">\n          <MapComponent />\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport placesSlice from '../features/Map/Places/placesSlice';\n\nexport const store = configureStore({\n  reducer: {\n    places: placesSlice,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}